dist: xenial
sudo: required
language:
  - generic
cache:
  - apt

# env:
#   global:
#     - PYTHONPATH=$PYTHONPATH:/usr/lib/python2.7/dist-packages:/usr/local/lib/python2.7/dist-packages

# Install system dependencies, namely a very barebones ROS setup.
before_install:
  - sudo apt-get update
  - sudo apt-get install libeigen3-dev libboost-all-dev swig
  - sudo apt-get install liburdfdom-dev liburdfdom-headers-dev
  - sudo apt-get install python-numpy
  
# Create a catkin workspace with the package under integration.
install:
  - mkdir ~/oscr-deps ~/install
  - git clone https://github.com/oscar-ramos/oscr-deps ~/oscr-deps
  - cd ~/oscr-deps
  - ./install-deps ~/install SET-BASH
  - source ~/.bashrc
    
#before_script:

  # Compile and test (mark the build as failed if any step fails). If the
  # CATKIN_OPTIONS file exists, use it as an argument to catkin_make, for example
  # to blacklist certain packages.
  #
  # NOTE on testing: `catkin_make run_tests` will show the output of the tests
  # (gtest, nosetest, etc..) but always returns 0 (success) even if a test
  # fails. Running `catkin_test_results` aggregates all the results and returns
  # non-zero when a test fails (which notifies Travis the build failed).

script:
  - cd ~/build/oscar-ramos/oscr
  - mkdir build
  - cd build
  - cmake .. -DCMAKE_INSTALL_PREFIX=~/install
  - make
  - make install
  # Run the tests, ensuring the path is set correctly.
  - cd examples/c++
  # - ./ff6dofModel
  # Configure for Python support
  - echo 'export PYTHONPATH=~/install/lib/python2.7/site-packages:$PYTHONPATH' >> ~/.bashrc
  - echo 'export LD_LIBRARY_PATH=~/install/lib:$LD_LIBRARY_PATH' >> ~/.bashrc
  - source ~/.bashrc
  - cd ~/build/oscar-ramos/oscr/unitTests/python
  - python testMathUtils.py
                                               
